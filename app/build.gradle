apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'io.fabric'
apply from: "${rootProject.projectDir}/dependencies.gradle"

android {

    compileSdkVersion 29
    buildToolsVersion '29.0.2'

    defaultConfig {
        applicationId "com.aandssoftware.aandsinventory"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 4
        versionName "4.1"
        multiDexEnabled true
        buildConfigField "String", "FIREBASE_SERVER_KEY", "\""+getFirebaseKey()+"\""
    }

    signingConfigs {
        release {
            storeFile file(RELEASE_STORE_FILE)
            storePassword RELEASE_STORE_PASSWORD
            keyAlias RELEASE_KEY_ALIAS
            keyPassword RELEASE_KEY_PASSWORD
        }
    }

    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
            versionNameSuffix ".debug"
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            resValue "string", "app_version", "${defaultConfig.versionCode}${versionNameSuffix}"
        }

        release {
            signingConfig signingConfigs.release
            debuggable false
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            resValue "string", "app_version", "${defaultConfig.versionCode}"
        }
    }



    dexOptions {
        javaMaxHeapSize "4g"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        abortOnError false
    }

    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def project = "AandSApp"
            def SEP = "_"
            //def flavor = variant.productFlavors[0].name
            def buildType = variant.variantData.variantConfiguration.buildType.name
            def version = variant.versionName
            def date = new Date();
            def formattedDate = date.format('ddMMyy_HHmm')
            //def newApkName = project + SEP + flavor + SEP + buildType + SEP + version + SEP + formattedDate + ".apk"
            def newApkName = project + SEP + buildType + SEP + version + SEP + formattedDate + ".apk"
            outputFileName = new File(newApkName)
        }
    }
}

def getFirebaseKey() {
    Properties properties = new Properties()
    properties.load(project.rootProject.file('gradle.properties').newDataInputStream())
    return properties.getProperty("FIREBASE_SERVER_KEY");
}


dependencies {
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    compile fileTree(include: ['*.jar'], dir: 'libs')
    // kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    implementation 'com.github.bumptech.glide:glide:3.7.0'
    implementation 'com.android.support:multidex:1.0.0'
    implementation 'de.hdodenhof:circleimageview:2.1.0'

    //Update
    implementation 'com.google.android.play:core:1.6.3'
    implementation ('com.google.android.gms:play-services-ads:17.2.1'){
        exclude group: 'com.android.support' exclude module: 'support-v4'
    }

    //Firebase realtime database
    implementation "com.google.firebase:firebase-analytics:$FIREBASE_ANALITICS_VERSION"
    implementation "com.google.firebase:firebase-database:$FIREBASE_DATABASE_VERSION"
    implementation "com.google.firebase:firebase-storage:$FIREBASE_DATABASE_STORAGE_VERSION"

    //Crashlatics and analytics
    FIREBASE_MESSAGEING_VERSION
    implementation "com.google.firebase:firebase-messaging:$FIREBASE_MESSAGEING_VERSION"
    implementation "com.crashlytics.sdk.android:crashlytics:$FIREBASE_CRASHLATICS_VERSION"

    implementation androidLibraryDependencies.values()
    implementation rxDependencies.values()
    implementation networkDependencies.values()
}

apply plugin: 'com.google.gms.google-services'